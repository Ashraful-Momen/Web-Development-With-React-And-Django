settings.py=> 
-------------------

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

TEMPLATES_DIR = BASE_DIR / 'template'
MEDIA_DIR = BASE_DIR / 'media'
STATIC_DIR = BASE_DIR / 'static'

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-g=n33+)hm8q3=2ylsk%s*+8n34sztm_x4^t1r9#z561m)$ml7%'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'Function_Crud',
    "crispy_forms",
    "crispy_bootstrap5",
]

CRISPY_ALLOWED_TEMPLATE_PACKS = "bootstrap5"

CRISPY_TEMPLATE_PACK = "bootstrap5"

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'CRUD_project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [TEMPLATES_DIR],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'CRUD_project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [STATIC_DIR, ]


MEDIA_URL = '/media/'
MEDIA_ROOT = MEDIA_DIR

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


-------------------------------------------------------------------------------------------------------
models.py=> 
------------------
from django.db import models

# Create your models here.


class Crud(models.Model): 

    title = models.CharField(max_length=255, blank=True, null=True)
    description = models.CharField(max_length=255, blank=True)
    image = models.ImageField(upload_to='img/', blank=True)
    created = models.DateTimeField(auto_now_add=True) 

    class Meta: 
        ordering = ['-created']

    def __str__(self) -> str:
        return f'title: {self.title}; description: {self.description}'
-------------------------------------------------------------------------------------------------------
forms.py=> 
-------------
from django import forms
from Function_Crud.models import Crud 


class CrudFrom(forms.ModelForm): 
     
     class Meta: 
          model = Crud 
          fields = ['title', 'image', 'description']

    
-------------------------------------------------------------------------------------------------------
urls.py=> 
-------------
from django.urls import path
from django.conf import settings 

from Function_Crud import views

app_name = 'Function_Crud'

urlpatterns = [
    path('fn_create/',views.Create, name='create'),
    path('fn_view/',views.List, name='views'),
    path('fn_edit/<int:id>',views.Edit, name='edit'),
    path('fn_delete/<int:id>',views.Delete, name='delete'),
]

-------------------------------------------------------------------------------------------------------
mainProject.py=> 
------------------
from django.contrib import admin
from django.urls import path,include
from django.contrib.staticfiles.urls import  staticfiles_urlpatterns, static
from django.conf import settings

urlpatterns = [
    path('admin/', admin.site.urls),
    path('',include('Function_Crud.urls',namespace='Function_Crud')),
]



urlpatterns += staticfiles_urlpatterns()
urlpatterns += static(settings.MEDIA_URL,document_root=settings.MEDIA_ROOT)
-------------------------------------------------------------------------------------------------------
views.py=> 
------------------
from django.shortcuts import render, redirect,HttpResponseRedirect
from django.urls import reverse
from .forms import CrudFrom
from .models import Crud

def Create(request):
    form = CrudFrom()

    if request.method == 'POST':
        form = CrudFrom(request.POST, request.FILES)
        if form.is_valid():
            form.save()
            return redirect('Function_Crud:views')

    return render(request, 'Function_Crud/create.html', context={ 'form': form})


def List(request): 
    data = Crud.objects.all()

    return render(request,'Function_Crud/views.html',context={'data':data})


def Edit(request, id):
    data = Crud.objects.get(pk=id)
    form = CrudFrom(instance=data)
    dictionary = {'data': data}

    if request.method == "POST":
        print(request.POST) 
        print(request.FILES) 
        form = CrudFrom(request.POST, request.FILES, instance=data)
        if form.is_valid():
            form.save()
            return redirect('Function_Crud:views')

    return render(request, 'Function_Crud/edit.html', context={'dictionary': dictionary, 'form': form,'id':id})



def Delete(request, id): 
    data = Crud.objects.get(pk=id)
    data.delete()

    return redirect('Function_Crud:views') 



-------------------------------------------------------------------------------------------------------
create.html=> 
------------------------------
{% load static %}
{% load crispy_forms_tags %}


<!doctype html>
<html lang="en">

<head>
  <title>Title</title>
  <!-- Required meta tags -->
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

  <!-- Bootstrap CSS v5.2.1 -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.1/dist/css/bootstrap.min.css" rel="stylesheet"
    integrity="sha384-iYQeCzEYFbKjA/T2uDLTpkwGzCiq6soy8tYaI1GyVh/UjpbCx/TYkiZhlZB6+fzT" crossorigin="anonymous">

</head>

<body>
  <div class="container">
    <h1 class="text-center">Create Data </h1>
    <hr>
    <div class="row  d-flex justify-content-center  ">
        <div class="col-6  m-2 p-3 border rounded">
            <form action="{% url 'Function_Crud:create' %}" method="POST" enctype="multipart/form-data">
                {% csrf_token %}
                {{form|crispy}}
              <button type="submit" class="btn btn-sm btn-success">Submit</button>
        
            </form>
        </div>
    </div>
  </div>
  <!-- Bootstrap JavaScript Libraries -->
  <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js"
    integrity="sha384-oBqDVmMz9ATKxIep9tiCxS/Z9fNfEXiDAYTujMAeBAsjFuCZSmKbSSUnQlmh/jp3" crossorigin="anonymous">
  </script>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.1/dist/js/bootstrap.min.js"
    integrity="sha384-7VPbUDkoPSGFnVtYi0QogXtr74QeVeeIs99Qfg5YCF+TidwNdjvaKZX19NZ/e6oz" crossorigin="anonymous">
  </script>
</body>

</html>
-------------------------------------------------------------------------------------------------------
edit.html=> 
---------------
{% load static %}
{% load crispy_forms_tags %}


<!doctype html>
<html lang="en">

<head>
  <title>Title</title>
  <!-- Required meta tags -->
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

  <!-- Bootstrap CSS v5.2.1 -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.1/dist/css/bootstrap.min.css" rel="stylesheet"
    integrity="sha384-iYQeCzEYFbKjA/T2uDLTpkwGzCiq6soy8tYaI1GyVh/UjpbCx/TYkiZhlZB6+fzT" crossorigin="anonymous">

</head>

<body>
  <div class="container">
    <h1 class="text-center">Edit Data </h1>
    <hr>
    <div class="row  d-flex justify-content-center  ">
        <div class="col-6  m-2 p-3 border rounded">
            <form action="{% url 'Function_Crud:edit' id=id %}" method="POST" enctype="multipart/form-data">
                {% csrf_token %}
                {{form|crispy}}
              <button type="submit" class="btn btn-sm btn-success">Submit</button>
        
            </form>
        </div>
    </div>
  </div>
  <!-- Bootstrap JavaScript Libraries -->
  <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js"
    integrity="sha384-oBqDVmMz9ATKxIep9tiCxS/Z9fNfEXiDAYTujMAeBAsjFuCZSmKbSSUnQlmh/jp3" crossorigin="anonymous">
  </script>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.1/dist/js/bootstrap.min.js"
    integrity="sha384-7VPbUDkoPSGFnVtYi0QogXtr74QeVeeIs99Qfg5YCF+TidwNdjvaKZX19NZ/e6oz" crossorigin="anonymous">
  </script>
</body>

</html>
-------------------------------------------------------------------------------------------------------
views.py=> 
---------------


<!doctype html>
<html lang="en">

<head>
  <title>Show Data</title>
  <!-- Required meta tags -->
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

  {% load static %}

  <!-- Bootstrap CSS v5.2.1 -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.1/dist/css/bootstrap.min.css" rel="stylesheet"
    integrity="sha384-iYQeCzEYFbKjA/T2uDLTpkwGzCiq6soy8tYaI1GyVh/UjpbCx/TYkiZhlZB6+fzT" crossorigin="anonymous">
  <link rel="stylesheet" href="{% static '/function.css' %}">
</head>

<body>
  <div class="container">
    <table class="table border rounded my-5">
        <thead>
          <tr>
            <th scope="col">#</th>
            <th scope="col">Title</th>
            <th scope="col">Descriptions</th>
            <th scope="col">Image</th>
            <th scope="col">Action</th>
          </tr>
        </thead>
        <tbody>
          
          {% for data in data %}
          <tr>
            <th scope="row">{{forloop.counter}}</th>
            <td>{{data.title}}</td>
            <td>{{data.description}}</td>
            
            {% if data.image %}
            <td>
                <img src="/media/{{data.image}}" alt="Image not Found" width="70px" height="60px" class="img-thumbnail rounded-circle">
            </td>
            {% else %}
            <td>
                <img src="http://127.0.0.1:8000/media/default/default.jpg" alt="default img" width="80px" height="50px" class="img-thumbnail rounded-circle">
            </td>
            {% endif %}
                
            <td>
                <a href="{% url 'Function_Crud:edit' id=data.id %}" class="btn btn-sm btn-warning">Edit</a>
                <a href="{% url 'Function_Crud:delete' id=data.id %}" class="btn btn-sm btn-danger">Delete</a>
            </td>
          </tr>
            
          {% endfor %}
            
        </tbody>
      </table>
  </div>
  <!-- Bootstrap JavaScript Libraries -->
  <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js"
    integrity="sha384-oBqDVmMz9ATKxIep9tiCxS/Z9fNfEXiDAYTujMAeBAsjFuCZSmKbSSUnQlmh/jp3" crossorigin="anonymous">
  </script>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.1/dist/js/bootstrap.min.js"
    integrity="sha384-7VPbUDkoPSGFnVtYi0QogXtr74QeVeeIs99Qfg5YCF+TidwNdjvaKZX19NZ/e6oz" crossorigin="anonymous">
  </script>
</body>

</html>
-------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------