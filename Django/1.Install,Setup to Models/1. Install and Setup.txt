1. install python in PC and setup environment variable.... >>> python --verison
2. install pip >> pip --version . >>> pip --list

-------------------------install Django Project--------------------------------------
3.>>> pip install django

------------------------------fix pip package install error------------------------
1.>>> goto cmd with admin >>> run command >>> pip install package name...
2.>>> pip install django --user.
3.>>> goto user>>>admin>>>pyvenv >>> false convert to 'True'. and save the file . then run the command again ...

4. >>> django-admin  . if getting error then uninstall the python version and install new version then run agan command.
---------------------------------install django project----------------------------------------------------------------------------

>>> django-admin stratproject My-First-Project [create new Project]

>>> cd My-First-Project. 

>>>python manage.py runserver [run project on server...]

----------------------------------run the project in different port ---------------------------
>>>python manage.py runserver 7000<-- 'port number'

-----------------------------------install django package extension for vs-code: or install according to need----------------------

django extension for VS-Code ....

1. Django
2. Django-inteligence
3. Copy-Django-model field
4. Django-Snippet
5. Sourcy
6. and Python also....

---------------------------------------------------------------------------------------------
Django Project => is a combination of multiple application=> registration, comments, login, blog, .... every task done by
                different application. 

--------------------------------------Create Apps inside Django Project-------------------------------------------------------
*** there are lot's off app in one Django project....

>>> python manage.py startapp First_App [Create Apps inside the project.]

*** connect App to the Django project ... 
>>> goto main project file >>> setting.py => Install_App=['write_down_appName'].


---------------------------------------Laravel vs Djanog-------------------------------------------------------------------------------
MVT vs MVC.

browser search bar => www.abc.com/abc => urls.py[route file] -> views.py[ controller] -> template ->[views]

model [model -> table (Laravel and Django Same here...)]


------------------------------------------view module import----------------------------------------------------------------------
=> IN Django, every App has view.py files . we have to import a module. and that is 


=> from django.http import HttpResposne

=> goto ->first_app => views.py =>

            def index(request):{
                return HttpResposne("Hello Wold!")
            }

=> then goto main project file => urls.py => from first_app import views.py 

=> urlspattern=[
   example=> path('urlpatter/route',views.index => fileName.functionName,name='index' <- route name)

   path('index/',views.index, name='index'),
   path('home/',views.index,name='home'), # =>website.com/index or website.com/home =>then also run index() form views.
   path('', views.index, name='index') , #=> by default it run the index() form views.py
]
----------------------------------------------------------------------------------------------------------------------
---------------------------------------------------views.py----------------------------------------------------------------------------
from django.shortcuts import render
from django.http import HttpResponse


def home(requst):
    return HttpResponse('<h1>Home Page</h1> <a href="/contact">Contact Page</a> <a href="/about">About Page</a>')

def about(requst):
    return HttpResponse('<h1>About Page</h1> <a href="/contact">Contact Page</a> <a href="/">Home Page</a>')

def contact(requst):
    return HttpResponse('<h1>Contact Page</h1> <a href="/">Home Page</a> <a href="/about">About Page</a>')
----------------------------------------------------------------------------------------------------------------------
----------------------------------------------urls.py------------------------------------------------------------------------

from django.contrib import admin
from django.urls import path
from first_app import views

urlpatterns = [
    path('admin/', admin.site.urls),
    
    #custom routes:------------------------------
   
    path('home/',views.home,name='home'),
    path('',views.home,name='home'),
    path('contact/',views.contact,name='contact'),
    path('about/',views.about,name='about'),
]

----------------------------------------------------------------------------------------------------------------------


---------------------------------------for url mapping from indivisual App(no need to use extra import : django.conf.urls import url)-------------------------------------------------------------------------------
=> URL Mapping : mainWebsite.com/App_name/views_urlName


create a urls.py file in Apps  folder then => from django.conf.urls import url(***error don't use it)
                                           => from django.urls import path 
                                           => from first_app import views 
=>goto app folder => create urls.py =>

urls.py=> 
        {write controller/views functions }

        --------------------------------------------------------------------------------------

goto => Main Project Folder => urls.py
------------------------------
urls.py => from django.conf.urls import include (*** no need to use it)
        => from django.urls import path , include

        urlspattern=[
            path('app_name/', include('app_name.fileName')),
            path('first_app/',include('first_app.urls')),
        ]
 
----------------------------------------------------------------------------------------------------------------------
------------------------------------------MainProject : urls.py----------------------------------------------------------------------------
from django.contrib import admin
from django.urls import path, include
from first_app import views

urlpatterns = [
    path('admin/', admin.site.urls),
    path('', views.index,name='index'),
    path('first_app/', include('first_app.urls')),
]

----------------------------------------------------------------------------------------------------------------------
-------------------------------------------first_app: urls.py---------------------------------------------------------------------------
from django.urls import path
from first_app import views 

urlpatterns = [
    path('', views.index, name='index'),
    path('home/', views.home, name='home'),
    path('contact/', views.contact, name='contact'),
]

----------------------------------------------------------------------------------------------------------------------
-------------------------------------------first_app: views.py---------------------------------------------------------------------------
from django.shortcuts import render
from django.http import HttpResponse


def index(requst):
    return HttpResponse('<h1>Home with Index function Page</h1> ')

def home(requst):
    return HttpResponse('<h1>Home with HOme function Page</h1> ')

def contact(requst):
    return HttpResponse('<h1>Home with contact function Page</h1> ')

--------------------------------------------end urls mapping...--------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------
-------------------------------------------Template---------------------------------------------------------------------------
**** firstly include the template folder path to the main project setting TEMPLATES=[add the path].
--------------------------------------------

import os

print(__file__) # print the file name. with full path ....  alternative => os.path.abspath(__file__)
print(Path(__file__)) # print the fileName with full path... 

print(Path(__file__).resolve().parent.parent) # return full path but .resolve().parent = cd ../ 
alternative => os.path.dir(os.path.dir()) = cd../../

print(os.path.join(BASE_DIR,'template')) # full path + /template
template_path = BASE_DIR / 'template'

print(template_path) #full path + /template


****------------------------get the full path of template folder then add , Template={'DIRS': [TEMPLATES_DIR,],}--------------------

-----------------------------goto the view file => first_app=> views.py-------------------------------------


from django.shortcuts import render
from django.http import HttpResponse



def index(request):
    dictionary ={"name":"shuvo",}
    return render(request,'first_app/index.html',context=dictionary) 

          explanations => render(request,'apname/index.html,context=dictionary) => here index.html comes from => template/first_app/index.html , and dictionary{value } print in the index.html file with {{dictionary_varibale}}

=> goto the index.html file =>   <p>this varable value comes from dictionary first_app/views.py => {{name}}</p>
------------------------------------------MainProject:: setting.py----------------------------------------------------------------------------

"""
Django settings for My_First_Project project.

Generated by 'django-admin startproject' using Django 4.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""
import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# print(Path(__file__).resolve().parent.parent)
# print(os.path.join(BASE_DIR,'template'))

#Custom file path add for template: 

TEMPLATES_DIR = BASE_DIR / 'template'

# print(TEMPLATES_DIR)



# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-ay7mc7hfvw1w6nq8q^ybksuf#m&j80jvj=pxfuz*%d)0^i3xju'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'first_app',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'My_First_Project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [TEMPLATES_DIR,],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'My_First_Project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

----------------------------------------------------------------------------------------------------------------------
---------------------------------------------------MainProject:: urls.py-------------------------------------------------------------------
from django.contrib import admin
from django.urls import path, include
from first_app import views

urlpatterns = [
    path('admin/', admin.site.urls),
    path('', views.index,name='index'),
    path('first_app/', include('first_app.urls')),
]

--------------------------------------------------first_app:: urls.py--------------------------------------------------------------------
from django.urls import path
from first_app import views 

urlpatterns = [
    path('', views.index, name='index'),
   
]
--------------------------------------------------first_app:: views.py--------------------------------------------------------------------
from django.shortcuts import render
from django.http import HttpResponse



def index(request):
    dictionary ={"name":"shuvo",}
    return render(request,'first_app/index.html',context=dictionary)
--------------------------------------------------end Template--------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------
--------------------------------------static file(adding): img, css, js--------------------------------------------------------------------------------
create a static folder in MainProject=>
---------------------------------------

=>MainProject::setting.py =>
-----------------------------

STATICS_DIR = BASE_DIR / 'static'


STATIC_URL = 'static/'

STATICFILES_DIRS=[
    STATICS_DIR,
]

-----------------------goto index.html : where add the img---------------------------

<!DOCTYPE html>
{% load static %}  <--for adding img or static file-->
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>This is the Home Page</title>
</head>
<body>
    <h1>I'am form home page index.html</h1>
    <p>this varable value comes from dictionary first_app/views.py => {{name}}</p>
    <img src="{% static 'img/Logo.png' %}" >
    <br>
    <!-- <img src="static/img/Logo.png" > -->
    <br/>
    
</body>
</html>


check that img is loading or not=> http://127.0.0.1:8000/static/img/Logo.png

---------------------------------end static file-------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------
-------------------------------------------****Django Model****---------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------
every indivisual apps have model.py for database => first_app::model.py => 
------------------------------------first_app::model.py---------------------------------------
from django.db import models

# Create your models here.

class Musician(models.Model):
    # id=models.AutoField(primary_key=True) #this line django take autometically
    first_name = models.CharField(max_length=50) #(max_length=50,null=Ture or blank=True) # this field can blank/null :True ...
    last_name = models.CharField(max_length=50)
    instrument = models.CharField(max_length=50)

     #show the variable :
    def __str__(self):
        return self.first_name+" "+self.last_name

class Album(models.Model):
    # id=models.AutoField(primary_key=True) #this line django take autometically
    artist = models.ForeignKey('Musician',  on_delete=models.CASCADE) #ForeignKey add
    name = models.CharField(max_length=50)
    release_date = models.DateField()
    num_star = models.IntegerField()

-----------------------------------------command for model: after change model then run command--------------------------------
>>> python manage.py migrate
>>> python manage.py makemigrations first_app <-( App Name)
>>> python manage.py migrate
----------------------------------------------------------------------------------------------------------------------
----------------------------------------model object access:------------------------------------------------------------------------------
>>>python manage.py shell

then shell will be executed

>>>from appName.models import tableName [example]
>>> from first_app.models import Musician
>>> print(Musician.object.all()) .<-[print/show Musician table data]

send data to table 
>>> obj = tableName(filedName='value',filedName='value',...) [example]
>>> obj = Musician(first_name='Md.Ashraful', last_name='shuvo')
>>> obj.save()

show data from table 

>>>print(Musician.objects.all())

-----------------------------
>>> python manage.py migrate
>>> python manage.py makemigrations first_app <-( App Name)
>>> python manage.py migrate
--------------------------
>>> from first_app.models import Musician
>>> print(Musician.objects.all())
<QuerySet [<Musician: Ashraful Momen>, <Musician: shuvo Momen>]>
>>> 


----------------------------------------------------------------------------------------------------------------------
------------------------------------------------model:Admin site----------------------------------------------------------------------
-----------------------------------------------admin superuser command-----------------------------------------------------------------------
firstly register those table /model in =>first_app::admin.py . then =>
---------------------------------=>first_app::admin.py---------------
from django.contrib import admin
from first_app.models import Musician,Album

# Register your models here.

admin.site.register(Musician)
admin.site.register(Album)
------------------------------------------------

>>> python manage.py createsuperuser [complete ->userName, passWord]

>>>then goto 127.0.0.1:8000/admin . LogIN with userName and passWord 


----------------------------------------------------------------------------------------------------------------------
--------------------------------------------Models (More Examples: rating optoins)--------------------------------------------------------------------------
-------------------------------------------first_app::models.py---------------------------------------------------------------------------
from django.db import models

# Create your models here.

class Musician(models.Model):
    # id=models.AutoField(primary_key=True) #this line django take autometically
    first_name = models.CharField(max_length=50)
    last_name = models.CharField(max_length=50)
    instrument = models.CharField(max_length=50)

    #show the variable :
    def __str__(self):
        return self.first_name+" "+self.last_name

class Album(models.Model):
    # id=models.AutoField(primary_key=True) #this line django take autometically
    artist = models.ForeignKey('Musician',on_delete=models.CASCADE) #ForeignKey add
    name = models.CharField(max_length=50)
    release_date = models.DateField()

    #rating opetions:
    rating=(
        (1,"Bad"),
        (2,"Not Bad"),
        (3,"Good"),
        (4,"Very Good"),
        (5,"Awesome"),
    )
    num_star = models.IntegerField(choices=rating) #add rating option here

     #show the variable :
    def __str__(self):
        return self.name+" ,Rating:  "+str(self.num_star)
-----------------------------
>>> python manage.py makemigrations first_app 
>>> python manage.py migrate
--------------------------
----------------------------------------------------------------------------------------------------------------------
---------------------------------------Model data to show template(MVT)-------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------
{{use print variable }}
{% use->if/else,forLoop,or coditionals %} 

----------------------------------------first_app::views.py------------------------------------------------------------------------------
from django.shortcuts import render
from django.http import HttpResponse
from first_app.models import Musician, Album



def index(request):
    # SELECT * FROM Musician ORDER BY first_name #raw MySQL query

    musician_list = Musician.objects.order_by('first_name') #ORM
    dictionary ={"Musician_List":"All Musician's","musician":musician_list}
    return render(request,'first_app/index.html',context=dictionary)


----------------------------------------------------------------------------------------------------------------------
-----------------------------------------template>>first_app::index.html-----------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------
<!DOCTYPE html>
{% load static %}
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{{Musician_List}}</title>
    <link rel="stylesheet" href="{% static 'css/color.css' %}" >
</head>
<body>
    <h1 align="center">{{Musician_List}}</h1>
        <table align="center" style="border:1px solid black; border-radius:10px;">
            <thead>
                <tr>
                    <th scope="col">First Name</th>
                    <th scope="col">Last Name</th>
                    <th scope="col">Instrument</th>
                </tr>
            </thead>
            <tbody>
                {% for row in musician %}

                <tr >
                    <td>{{row.first_name}}</td>
                    <td>{{row.last_name}}</td>
                    <td>{{row.instrument}}</td>
                </tr>
                {% endfor %}
                {% comment %} <tr class="">
                    <td scope="row">R1C1</td>
                    <td>R1C2</td>
                    <td>R1C3</td>
                </tr> {% endcomment %}
               
            </tbody>
        </table>
    
    
    
</body>
</html>
------------------------------------------End Model----------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------
